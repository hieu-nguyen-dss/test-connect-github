name: Create Jira PBI for Pull Requests

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - edited
      - reopened
      - synchronize
jobs:
  create-jira-issue:
    runs-on: ubuntu-latest
    if: github.actor != 'github-actions[bot]'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Search for existing Jira PBI
        id: search_issue
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_PROJECT_KEY: ${{ secrets.JIRA_PROJECT_KEY }}
        run: |
          # Sanitize inputs
          sanitize_input() {
            echo "$1" | jq -Rr @json
          }

          PR_TITLE=$(sanitize_input "${{ github.event.pull_request.title }}")
          LIBRARY_NAME=$(echo "${PR_TITLE}" | sed -E 's/.*Bump ([a-zA-Z0-9_/-]+) from.*/\1/')
          OLD_VERSION=$(echo "${PR_TITLE}" | sed -E 's/.*from ([0-9]+\.[0-9]+\.[0-9]+) to.*/\1/')
          NEW_VERSION=$(echo "${PR_TITLE}" | sed -E 's/.*to ([0-9]+\.[0-9]+\.[0-9]+).*/\1/')

          JQL_QUERY="project=${JIRA_PROJECT_KEY} AND summary~\"Bump ${LIBRARY_NAME} from\""
          ENCODED_JQL=$(echo "${JQL_QUERY}" | jq -sRr @uri)

          EXISTING_ISSUE_KEY=$(curl -s -u "${JIRA_EMAIL}:${JIRA_API_TOKEN}" \
            -H "Content-Type: application/json" \
            "${JIRA_BASE_URL}/rest/api/3/search?jql=${ENCODED_JQL}" | jq -r '.issues[0]?.key // ""')

          {
            echo "EXISTING_ISSUE_KEY=${EXISTING_ISSUE_KEY}"
            echo "LIBRARY_NAME=${LIBRARY_NAME}"
            echo "OLD_VERSION=${OLD_VERSION}"
            echo "NEW_VERSION=${NEW_VERSION}"
          } >> "${GITHUB_ENV}"

      - name: Create or Update Jira Issue
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_EMAIL: ${{ secrets.JIRA_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_PROJECT_KEY: ${{ secrets.JIRA_PROJECT_KEY }}
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          LIBRARY_NAME="${{ env.LIBRARY_NAME }}"
          OLD_VERSION="${{ env.OLD_VERSION }}"
          NEW_VERSION="${{ env.NEW_VERSION }}"
          EXISTING_ISSUE_KEY="${{ env.EXISTING_ISSUE_KEY }}"

          JIRA_DESCRIPTION=$(cat <<EOF
          {
            "type": "doc",
            "version": 1,
            "content": [
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "text",
                    "text": "Update ${LIBRARY_NAME} library from ${OLD_VERSION} to ${NEW_VERSION}."
                  }
                ]
              },
              {
                "type": "paragraph",
                "content": [
                  {
                    "type": "text",
                    "text": "Details: ",
                    "marks": [
                      {
                        "type": "strong"
                      }
                    ]
                  },
                  {
                    "type": "text",
                    "text": "${PR_URL}",
                    "marks": [
                      {
                        "type": "link",
                        "attrs": {
                          "href": "${PR_URL}"
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
          EOF
          )
          echo "123242"
          CLEANED_TITLE=$(echo "$PR_TITLE" | sed -E 's/^[^:]+: \([^)]*\): //')

          if [ -n "$EXISTING_ISSUE_KEY" ]; then
            echo "123"
            curl -s -X PUT \
              -u "${JIRA_EMAIL}:${JIRA_API_TOKEN}" \
              -H "Content-Type: application/json" \
              --data "{\"fields\": {\"summary\": \"${CLEANED_TITLE}\", \"description\": ${JIRA_DESCRIPTION}}}" \
              "${JIRA_BASE_URL}/rest/api/3/issue/${EXISTING_ISSUE_KEY}"
            echo "222"
          else
            curl -s -X POST \
              -H "Content-Type: application/json" \
              -u "${JIRA_EMAIL}:${JIRA_API_TOKEN}" \
              --data '{
                "fields": {
                  "project": {
                    "key": "'"${JIRA_PROJECT_KEY}"'"
                  },
                  "summary": "'"${CLEANED_TITLE}"'",
                  "description": '"${JIRA_DESCRIPTION}"',
                  "issuetype": {
                    "name": "Story"
                  }
                }
              }' \
              "${JIRA_BASE_URL}/rest/api/3/issue/"
          fi